/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Tue Jul  2 15:08:05 2019. */

#ifndef PB_CARISPAWBUFFERS_PB_H_INCLUDED
#define PB_CARISPAWBUFFERS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _frameUnit_Sensor {
    frameUnit_Sensor_IMU_9 = 0,
    frameUnit_Sensor_IMU_6 = 1,
    frameUnit_Sensor_USS_DOWN = 2,
    frameUnit_Sensor_USS_FORW = 3,
    frameUnit_Sensor_PI_CAM = 4
} frameUnit_Sensor;
#define _frameUnit_Sensor_MIN frameUnit_Sensor_IMU_9
#define _frameUnit_Sensor_MAX frameUnit_Sensor_PI_CAM
#define _frameUnit_Sensor_ARRAYSIZE ((frameUnit_Sensor)(frameUnit_Sensor_PI_CAM+1))

/* Struct definitions */
typedef struct _frameUnit {
    bool has_time_stamp;
    double time_stamp;
    bool has_sensorType;
    frameUnit_Sensor sensorType;
    bool has_acc_x;
    float acc_x;
    bool has_acc_y;
    float acc_y;
    bool has_acc_z;
    float acc_z;
    bool has_angular_x;
    float angular_x;
    bool has_angular_y;
    float angular_y;
    bool has_angular_z;
    float angular_z;
    bool has_mag_x;
    float mag_x;
    bool has_mag_y;
    float mag_y;
    bool has_mag_z;
    float mag_z;
    bool has_heading;
    float heading;
    bool has_pitch;
    float pitch;
    bool has_roll;
    float roll;
    bool has_USensorForward;
    float USensorForward;
    bool has_USensorDownward;
    float USensorDownward;
    pb_callback_t piCamImage;
    bool has_imageHeight;
    int32_t imageHeight;
    bool has_imageWidth;
    int32_t imageWidth;
/* @@protoc_insertion_point(struct:frameUnit) */
} frameUnit;

typedef struct _wheelUnit {
    bool has_time_stamp;
    float time_stamp;
    bool has_isStamp;
    bool isStamp;
    bool has_acc_x;
    float acc_x;
    bool has_acc_y;
    float acc_y;
    bool has_acc_z;
    float acc_z;
    bool has_angular_x;
    float angular_x;
    bool has_angular_y;
    float angular_y;
    bool has_angular_z;
    float angular_z;
/* @@protoc_insertion_point(struct:wheelUnit) */
} wheelUnit;

/* Default values for struct fields */

/* Initializer values for message structs */
#define frameUnit_init_default                   {false, 0, false, _frameUnit_Sensor_MIN, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define wheelUnit_init_default                   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define frameUnit_init_zero                      {false, 0, false, _frameUnit_Sensor_MIN, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define wheelUnit_init_zero                      {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define frameUnit_time_stamp_tag                 1
#define frameUnit_sensorType_tag                 2
#define frameUnit_acc_x_tag                      3
#define frameUnit_acc_y_tag                      4
#define frameUnit_acc_z_tag                      5
#define frameUnit_angular_x_tag                  6
#define frameUnit_angular_y_tag                  7
#define frameUnit_angular_z_tag                  8
#define frameUnit_mag_x_tag                      9
#define frameUnit_mag_y_tag                      10
#define frameUnit_mag_z_tag                      11
#define frameUnit_heading_tag                    12
#define frameUnit_pitch_tag                      13
#define frameUnit_roll_tag                       14
#define frameUnit_USensorForward_tag             15
#define frameUnit_USensorDownward_tag            16
#define frameUnit_piCamImage_tag                 17
#define frameUnit_imageHeight_tag                18
#define frameUnit_imageWidth_tag                 19
#define wheelUnit_time_stamp_tag                 1
#define wheelUnit_isStamp_tag                    2
#define wheelUnit_acc_x_tag                      3
#define wheelUnit_acc_y_tag                      4
#define wheelUnit_acc_z_tag                      5
#define wheelUnit_angular_x_tag                  6
#define wheelUnit_angular_y_tag                  7
#define wheelUnit_angular_z_tag                  8

/* Struct field encoding specification for nanopb */
extern const pb_field_t frameUnit_fields[20];
extern const pb_field_t wheelUnit_fields[9];

/* Maximum encoded size of messages (where known) */
/* frameUnit_size depends on runtime parameters */
#define wheelUnit_size                           37

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CARISPAWBUFFERS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
